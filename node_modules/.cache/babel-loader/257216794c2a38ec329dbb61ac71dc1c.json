{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navadiya Dinkal\\\\Desktop\\\\reactJs\\\\todoList\\\\todo_list\\\\src\\\\component\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  let lists = localStorage.getItem('list');\n  console.log(lists);\n\n  if (lists) {\n    return JSON.parse(localStorage.getItem('list'));\n  } else {\n    return [];\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [inputData, setInputData] = useState('');\n  const [Items, setItems] = useState(getLocalItems());\n  const [toggleSubmit, setToggleSubmit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const addItems = () => {\n    if (!inputData) {\n      alert(\"Please!! Fill the Data ðŸ˜ \");\n    } else if (inputData && !toggleSubmit) {\n      setItems(Items.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: inputData\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInputData('');\n      setIsEditItem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...Items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  const deleteItems = index => {\n    const updateditems = Items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateditems);\n  };\n\n  const deleteAll = () => {\n    toast(\"Delete All\");\n    setItems([]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(Items));\n  }, [Items]);\n\n  const editItems = id => {\n    const newEditItems = Items.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItems);\n    setToggleSubmit(false);\n    setInputData(newEditItems.name);\n    setIsEditItem(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            children: /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              className: \"text\",\n              children: \"Add Your List Here   \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add Items..  \",\n              id: \"\",\n              className: \"field\",\n              value: inputData,\n              onChange: e => setInputData(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              onClick: addItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {\n              className: \"edit\",\n              onClick: addItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" ShowItems \",\n            children: Items.map(elem => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eachItems\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    className: \"delete\",\n                    onClick: () => deleteItems(elem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n                    className: \"edit\",\n                    onClick: () => editItems(elem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 116\n                  }, this), elem.name, \"  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)\n              }, elem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"+nW07Ff0AzFNcaqrj+yYJU5J5bs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Navadiya Dinkal/Desktop/reactJs/todoList/todo_list/src/component/Todo.jsx"],"names":["React","useState","useEffect","AddCircleIcon","DeleteIcon","EditIcon","ToastContainer","toast","getLocalItems","lists","localStorage","getItem","console","log","JSON","parse","App","inputData","setInputData","Items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItems","alert","map","elem","id","name","allInputData","Date","getTime","toString","deleteItems","index","updateditems","filter","deleteAll","setItem","stringify","editItems","newEditItems","find","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst getLocalItems = () =>{\r\n    let lists = localStorage.getItem('list');\r\n    console.log(lists);\r\n\r\n    if(lists){\r\n        return JSON.parse(localStorage.getItem('list'));\r\n    }else{\r\n        return[];\r\n    }\r\n}\r\n\r\nconst App = () =>{\r\n    const[inputData , setInputData] = useState('');\r\n    const[Items , setItems] = useState(getLocalItems());\r\n    const[toggleSubmit , setToggleSubmit] = useState(true);\r\n    const[isEditItem , setIsEditItem] = useState(null);\r\n\r\n    const addItems = () =>{\r\n        if(!inputData){\r\n            alert(\"Please!! Fill the Data ðŸ˜ \")\r\n        }else if(inputData && !toggleSubmit){\r\n            setItems(\r\n                Items.map((elem) =>{\r\n                    if(elem.id === isEditItem)  {\r\n                        return{...elem, name:inputData}\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n\r\n        setInputData('');\r\n\r\n        setIsEditItem(null); \r\n        }\r\n        else{\r\n        const allInputData = { id: new Date().getTime().toString(), name:inputData }\r\n         setItems([...Items,allInputData]);\r\n         setInputData('');\r\n\r\n        }\r\n    }\r\n\r\n    const deleteItems = (index) =>{        \r\n        const updateditems = Items.filter((elem) =>{\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateditems);\r\n    }\r\n\r\n    const deleteAll = () =>{\r\n        toast(\"Delete All\");\r\n        setItems([]);\r\n\r\n    }\r\n\r\n    useEffect(() =>{\r\n          localStorage.setItem('list' , JSON.stringify(Items));\r\n    } ,[Items] )\r\n\r\n    const editItems = (id) =>{\r\n        const newEditItems = Items.find((elem)=>{\r\n            return elem.id === id;\r\n        });\r\n        console.log(newEditItems);\r\n\r\n        setToggleSubmit(false);\r\n\r\n        setInputData(newEditItems.name);\r\n\r\n        setIsEditItem(id); \r\n    }\r\n\r\n     return(\r\n         <>\r\n             <div>\r\n             <div className=\"main-div\">\r\n                <div className=\"center_div\">\r\n                    <figure>\r\n                        <figcaption className=\"text\">Add Your List Here   </figcaption>\r\n                    </figure>\r\n\r\n                    <div>\r\n                        <input type='text' placeholder=\"Add Items..  \" id=\"\" className=\"field\" value={inputData} onChange={(e)=>setInputData(e.target.value)}/>\r\n                        {\r\n                            toggleSubmit ? <AddCircleIcon onClick={addItems} /> : <EditIcon className=\"edit\" onClick={addItems}/>\r\n\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\" ShowItems \">\r\n                    {\r\n                        Items.map((elem)=>{\r\n                            return(\r\n                                \r\n                                    <div className=\"eachItems\" key={elem.id }>\r\n                                        <h3>  <DeleteIcon className=\"delete\" onClick={() => deleteItems(elem.id)}/><EditIcon className=\"edit\" onClick={() => editItems(elem.id)}/>{elem.name }  </h3>\r\n                                    </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n\r\n                    {/* <div className=\"ShowItems\">\r\n                        <button className=\"DeleteAll\" onClick={deleteAll}>DeleteAll</button>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n             </div>\r\n\r\n\r\n         </>\r\n     )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}